(()=>{const e="http://localhost:8000/api/v1";async function t(){return(await new Promise((e=>{chrome.storage.local.get("authToken",(t=>{e(t)}))}))).authToken}async function s(){const e=await new Promise((e=>{chrome.storage.local.get("connectionToken",(t=>{e(t)}))}));return console.log("Data from getConnectionToken",e),e.connectionToken}async function n(s){const n=await t();if(!n)return sendResponse({authenticated:!1});try{const t=await fetch(`${e}/members/collection/${s}`,{method:"DELETE",headers:{authorization:`Bearer ${n}`,"Content-Type":"application/json"}});if((await t.json()).success)return!0}catch(e){}}async function a(s,n){const a=await t();if(!a)return sendResponse({authenticated:!1});try{const t=await fetch(`${e}/members/collection/${s}/post/${n}`,{method:"DELETE",headers:{authorization:`Bearer ${a}`,"Content-Type":"application/json"}});if((await t.json()).success)return!0}catch(e){}}async function o(n,a){try{const o=await t(),c=(await s()).split("-")[1];if(!o)return void a({authenticated:!1,success:!1});try{const t=`${e}/members/${c}`,s=await fetch(t,{method:"PUT",headers:{authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify(n)});if(s.ok){const e=await s.json();console.log(e),a({data:e,synced:!0,success:!0})}else{const e=await s.json();console.log(e),a({success:!1,synced:!1,error:e})}}catch(e){console.log(e),a({success:!1,synced:!1,error:e.message})}}catch(e){console.log(e),a({success:!1,synced:!1,error:e.message})}}chrome.runtime.onMessage.addListener((function(e,t,s){if("checkserver"===e.action)return async function(e){try{200===(await fetch("http://localhost:8000",{method:"GET"})).status?e({awake:!0}):e({awake:!1})}catch(t){e({awake:!1})}}(s),!0})),chrome.runtime.onMessage.addListener((function(s,n,a){if("checkAuthentication"===s.action)return async function(s){try{const n=await t();if(console.log("token",n),!n||void 0===n)return s({authenticated:!1});const a=await fetch(`${e}/auth/verify`,{method:"GET",headers:{authorization:`Bearer ${n}`}});200===a.status?(console.log("response",a),s({data:await a.json(),authenticated:!0})):(console.log("response",a),s({authenticated:!1}))}catch(e){console.log("error",e),s({authenticated:!1})}}(a),!0})),chrome.runtime.onMessage.addListener((function(s,n,a){if("checkMemberExists"===s.action)return async function(s,n,a){console.log(n,a);const o=await t();try{const t=await fetch(`${e}/members/checkMember`,{method:"POST",headers:{"Content-Type":"application/json",authorization:`Bearer ${o}`},body:JSON.stringify({name:n,profileLink:a})});200===t.status?s({data:await t.json(),success:!0}):400===t.status&&s({success:!1})}catch(e){s({success:!1})}}(a,s.name,s.profileLink),!0})),chrome.runtime.onMessage.addListener((function(t,s,n){if("addConnectionToken"===t.action)return async function(t,s,n,a,o){try{const c=await fetch(`${e}/members/addConnectionToken`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({connectionToken:t,name:s,profileLink:n,profilePicture:a})});console.log("response",c),200===c.status?o({data:await c.json(),success:!0}):o({success:!1})}catch(e){console.log(e),o({success:!1})}}(t.connectionToken,t.name,t.profileLink,t.profilePictureDiv,n),!0})),chrome.runtime.onMessage.addListener((function(e,t,s){"addDashboard"===e.action&&chrome.tabs.query({active:!0,currentWindow:!0},(function(e){const t=e[0];chrome.tabs.sendMessage(t.id,{action:"callAddDashboardFunction"})}))})),chrome.runtime.onMessage.addListener((function(t,s,n){if("sendOTP"===t.action)return async function(t,s){try{const n=await fetch(`${e}/user/otp/${s}`,{method:"POST",headers:{"Content-Type":"application/json"}});200===n.status?t({success:!0}):400===n.status?t({success:!1}):429===n.status&&t({success:!1,tooManyRequests:!0})}catch(e){t({success:!1})}}(n,t.email),!0})),chrome.runtime.onMessage.addListener((function(s,n,a){if("addLeaderboard"===s.action)return async function(s){try{const n=await t();if(!n)return s({authenticated:!1});const a=await fetch(`${e}/members/users`,{method:"GET",headers:{authorization:`Bearer ${n}`}});200===a.status?s({data:await a.json(),success:!0}):s({success:!1})}catch(e){s({success:!1})}}(a),!0})),chrome.runtime.onMessage.addListener((function(t,s,n){if("addToGuestUser"===t.action)return async function(t,s,n,a,o){try{const c=`${e}/members/addtoguestuser`,i=await fetch(c,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({otp:t,name:s,profileLink:n,email:a})});if(200===i.status)o({data:await i.json(),success:!0});else{const e=await i.json();400===i.status&&!0===e.invalidOTP?o({invalidOTP:!0,success:!1}):400===i.status&&!0===e.alreadyExists?o({alreadyExists:!0,success:!1}):o({internalServerError:!0,success:!1})}}catch(e){o({success:!1})}}(t.otp,t.name,t.profileLink,t.email,n),!0})),chrome.runtime.onMessage.addListener((function(s,n,a){if("updateActiveDays"===s.action)return async function(s,n,a){const o=await t();if(!o)return a({authenticated:!1});try{const t=`${e}/members/daysactive`,c=await fetch(t,{method:"POST",headers:{authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify({activeDays:s,currentStreak:n})});200===c.status?a({data:await c.json(),success:!0}):a({success:!1})}catch(e){a({success:!1})}}(s.daysActive,s.currentStreak,a),!0})),chrome.runtime.onMessage.addListener((function(s,n,a){if("updateProfileVisibility"===s.action)return async function(s,n){const a=await t();if(!a)return n({authenticated:!1});try{const t=`${e}/members/lbprofilevisibility`,o=await fetch(t,{method:"POST",headers:{authorization:`Bearer ${a}`,"Content-Type":"application/json"},body:JSON.stringify({leaderBoardProfileVisibility:s})}),c=await o.json();200===o.status?n({data:c,success:!0}):429==o.status?n({success:!1,error:"Too many request try again after 1 min"}):n({success:!1})}catch(e){n({success:!1})}}(s.profileVisibility,a),!0})),chrome.runtime.onMessage.addListener((function(s,n,a){if("updatePostTagging"===s.action)return async function(s,n){const a=await t();if(!a)return n({authenticated:!1});try{const t=`${e}/members/tagPost`,o=await fetch(t,{method:"POST",headers:{authorization:`Bearer ${a}`,"Content-Type":"application/json"},body:JSON.stringify({tagPost:s})}),c=await o.json();200===o.status?n({data:c,success:!0}):429==o.status?n({success:!1,error:"Too many request try again after 1 min"}):n({success:!1})}catch(e){n({success:!1})}}(s.tagPostTopic,a),!0})),chrome.runtime.onMessage.addListener((function(e,t,s){if("logoutUser"===e.action)return function(e){chrome.storage.local.clear((function(){chrome.runtime.lastError?e({loggedOut:!1}):e({loggedOut:!0})}))}(s),!0})),chrome.runtime.onMessage.addListener((function(e,t,s){if("addEmail"===e.action)return addemail(e.email,s),!0})),chrome.runtime.onMessage.addListener((function(s,n,a){if("getUserCollections"===s.action)return async function(s){const n=await t();if(!n)return s({authenticated:!1});try{const t=`${e}/members/browsecollections`,a=await fetch(t,{method:"GET",headers:{authorization:`Bearer ${n}`,"Content-Type":"application/json"}});200===a.status?s({data:await a.json(),success:!0}):s({success:!1})}catch(e){s({success:!1})}}(a),!0})),chrome.runtime.onMessage.addListener((function(s,n,a){if("addToUserCollections"===s.action){const{collectionId:n,collectionName:o,postURL:c,postDescription:i}=s;return async function(s,n,a,o,c){const i=await t();if(!i)return c({authenticated:!1});try{const t=`${e}/members/addtocollection`,r=await fetch(t,{method:"POST",headers:{authorization:`Bearer ${i}`,"Content-Type":"application/json"},body:JSON.stringify({collectionId:s,collectionName:n,postURL:a,postDescription:o})});200===r.status?c({data:await r.json(),success:!0}):c({success:!1})}catch(e){c({success:!1})}}(n,o,c,i,a),!0}})),chrome.runtime.onMessage.addListener(((e,t,s)=>"deleteCollection"===e.action?(n(e.collectionId).then((e=>{s({success:e})})).catch((e=>{s({success:!1,error:e.message})})),!0):"deletePostFromCollection"===e.action?(a(e.collectionId,e.postId).then((e=>{s({success:e})})).catch((e=>{s({success:!1,error:e.message})})),!0):void 0)),chrome.runtime.onMessage.addListener((function(s,n,a){if("analyzePost"===s.action)return async function(s,n){try{const a=await t();if(!a)return n({authenticated:!1});try{const t=`${e}/posts/analyze`,o=await fetch(t,{method:"POST",headers:{authorization:`Bearer ${a}`,"Content-Type":"application/json"},body:JSON.stringify(s)});o.ok?n({data:await o.json(),success:!0}):n({success:!1,error:await o.json()})}catch(e){n({success:!1,error:e.message})}}catch(e){n({success:!1,error:e.message})}}(s.data,a),!0})),chrome.runtime.onMessage.addListener((function(e,t,s){if("updateAnalyticsData"===e.action)return o(e.data,s),!0})),chrome.runtime.onMessage.addListener((function(e,t,s){if("syncAnalytics"===e.action)return async function(e){console.log("syncAnalytics"),chrome.tabs.query({active:!0,currentWindow:!0},(function(e){const t=e[0];chrome.tabs.sendMessage(t.id,{action:"fetchAnalytics"})}))}(),!0})),chrome.runtime.onMessage.addListener((function(e,t,s){if("updateAnalyticsData"===e.action)return o(e.data,s),!0})),chrome.runtime.onMessage.addListener((function(n,a,o){if("updatePostsAnalyticsData"===n.action)return async function(n,a){console.log(n);try{const o=await t(),c=(await s()).split("-")[1];if(!o)return void a({authenticated:!1,success:!1});try{const t=`${e}/posts/${c}`,s=await fetch(t,{method:"PUT",headers:{authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify(n)});if(s.ok){const e=await s.json();console.log(e),a({data:e,synced:!0,success:!0})}else{const e=await s.json();console.log(e),a({success:!1,synced:!1,error:e})}}catch(e){console.log(e),a({success:!1,synced:!1,error:e.message})}}catch(e){console.log(e),a({success:!1,synced:!1,error:e.message})}}(n.data,o),!0}))})();